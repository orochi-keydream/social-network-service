networks:
  otus-hl:
    driver: bridge

services:
  etcd0:
    container_name: etcd0
    image: quay.io/coreos/etcd:v2.3.8
    networks:
      - otus-hl
    command:
      [
        "--name", "etcd0",
        "--data-dir", "/etcd-data",
        "--listen-client-urls", "http://0.0.0.0:2379",
        "--advertise-client-urls", "http://etcd0:2379",
        "--listen-peer-urls", "http://0.0.0.0:2380",
        "--initial-advertise-peer-urls", "http://etcd0:2380",
        "--initial-cluster", "etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380",
        "--initial-cluster-token", "token",
        "--initial-cluster-state", "new"
      ]
  etcd1:
    container_name: etcd1
    image: quay.io/coreos/etcd:v2.3.8
    networks:
      - otus-hl
    command:
      [
        "--name", "etcd1",
        "--data-dir", "/etcd-data",
        "--listen-client-urls", "http://0.0.0.0:2379",
        "--advertise-client-urls", "http://etcd1:2379",
        "--listen-peer-urls", "http://0.0.0.0:2380",
        "--initial-advertise-peer-urls", "http://etcd1:2380",
        "--initial-cluster", "etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380",
        "--initial-cluster-token", "token",
        "--initial-cluster-state", "new"
      ]
  etcd2:
    container_name: etcd2
    image: quay.io/coreos/etcd:v2.3.8
    networks:
      - otus-hl
    command:
      [
        "--name", "etcd2",
        "--data-dir", "/etcd-data",
        "--listen-client-urls", "http://0.0.0.0:2379",
        "--advertise-client-urls", "http://etcd2:2379",
        "--listen-peer-urls", "http://0.0.0.0:2380",
        "--initial-advertise-peer-urls", "http://etcd2:2380",
        "--initial-cluster", "etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380",
        "--initial-cluster-token", "token",
        "--initial-cluster-state", "new"
      ]
  postgres0:
    container_name: postgres0
    image: ghcr.io/zalando/spilo-16:3.2-p2
    networks:
      - otus-hl
    environment:
      - ETCD_HOST=etcd0:2379
      - ETCD_HOSTS=etcd0:2379,etcd1:2379,etcd2:2379
      - PGUSER_SUPERUSER=postgres
      - PGPASSWORD_SUPERUSER=123
      - ALLOW_NOSSL=true
      - PGVERSION=16
    depends_on:
      etcd0:
        condition: service_started
      etcd1:
        condition: service_started
      etcd2:
        condition: service_started
  postgres1:
    container_name: postgres1
    image: ghcr.io/zalando/spilo-16:3.2-p2
    networks:
      - otus-hl
    environment:
      - ETCD_HOST=etcd0:2379
      - ETCD_HOSTS=etcd0:2379,etcd1:2379,etcd2:2379
      - PGUSER_SUPERUSER=postgres
      - PGPASSWORD_SUPERUSER=123
      - ALLOW_NOSSL=true
      - PGVERSION=16
    depends_on:
      etcd0:
        condition: service_started
      etcd1:
        condition: service_started
      etcd2:
        condition: service_started
  postgres2:
    container_name: postgres2
    image: ghcr.io/zalando/spilo-16:3.2-p2
    networks:
      - otus-hl
    environment:
      - ETCD_HOST=etcd0:2379
      - ETCD_HOSTS=etcd0:2379,etcd1:2379,etcd2:2379
      - PGUSER_SUPERUSER=postgres
      - PGPASSWORD_SUPERUSER=123
      - ALLOW_NOSSL=true
      - PGVERSION=16
    depends_on:
      etcd0:
        condition: service_started
      etcd1:
        condition: service_started
      etcd2:
        condition: service_started
  ha-proxy:
    container_name: haproxy
    image: otus-haproxy
    build:
      context: ./
      dockerfile: haproxy.Dockerfile
    networks:
      - otus-hl
    ports:
      - "7000:7000"
      - "15432:15432"
      - "25432:25432"
      - "35432:35432"
    depends_on:
      postgres0:
        condition: service_started
      postgres1:
        condition: service_started
      postgres2:
        condition: service_started

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    networks:
      - otus-hl
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:latest
    networks:
      - otus-hl
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: LISTENER_INT://kafka1:29091,LISTENER_EXT://0.0.0.0:9091
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://kafka1:29091,LISTENER_EXT://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
      ZOOKEEPER: zookeeper:2181

  kafka2:
    container_name: kafka2
    image: confluentinc/cp-kafka:latest
    networks:
      - otus-hl
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: LISTENER_INT://kafka2:29092,LISTENER_EXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://kafka2:29092,LISTENER_EXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
      ZOOKEEPER: zookeeper:2181

  kafka3:
    container_name: kafka3
    image: confluentinc/cp-kafka:latest
    networks:
      - otus-hl
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: LISTENER_INT://kafka3:29093,LISTENER_EXT://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://kafka3:29093,LISTENER_EXT://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
      ZOOKEEPER: zookeeper:2181

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    networks:
      - otus-hl
    ports:
      - "8082:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true

  redis:
    container_name: redis
    image: redis
    networks:
      - otus-hl
    ports:
      - "6379:6379"
