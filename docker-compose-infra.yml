name: "social-network-service"

networks:
  social-network-service-nw:
    driver: bridge

volumes:
  healthcheck-volume:

services:
  etcd0:
    container_name: "${COMPOSE_PROJECT_NAME}-etcd0"
    image: quay.io/coreos/etcd:v2.3.8
    networks:
      - social-network-service-nw
    command:
      [
        "--name", "etcd0",
        "--data-dir", "/etcd-data",
        "--listen-client-urls", "http://0.0.0.0:2379",
        "--advertise-client-urls", "http://${COMPOSE_PROJECT_NAME}-etcd0:2379",
        "--listen-peer-urls", "http://0.0.0.0:2380",
        "--initial-advertise-peer-urls", "http://etcd0:2380",
        "--initial-cluster", "etcd0=http://${COMPOSE_PROJECT_NAME}-etcd0:2380,etcd1=http://${COMPOSE_PROJECT_NAME}-etcd1:2380,etcd2=http://${COMPOSE_PROJECT_NAME}-etcd2:2380",
        "--initial-cluster-token", "token",
        "--initial-cluster-state", "new"
      ]

  etcd1:
    container_name: "${COMPOSE_PROJECT_NAME}-etcd1"
    image: quay.io/coreos/etcd:v2.3.8
    networks:
      - social-network-service-nw
    command:
      [
        "--name", "etcd1",
        "--data-dir", "/etcd-data",
        "--listen-client-urls", "http://0.0.0.0:2379",
        "--advertise-client-urls", "http://${COMPOSE_PROJECT_NAME}-etcd1:2379",
        "--listen-peer-urls", "http://0.0.0.0:2380",
        "--initial-advertise-peer-urls", "http://${COMPOSE_PROJECT_NAME}-etcd1:2380",
        "--initial-cluster", "etcd0=http://${COMPOSE_PROJECT_NAME}-etcd0:2380,etcd1=http://${COMPOSE_PROJECT_NAME}-etcd1:2380,etcd2=http://${COMPOSE_PROJECT_NAME}-etcd2:2380",
        "--initial-cluster-token", "token",
        "--initial-cluster-state", "new"
      ]

  etcd2:
    container_name: "${COMPOSE_PROJECT_NAME}-etcd2"
    image: quay.io/coreos/etcd:v2.3.8
    networks:
      - social-network-service-nw
    command:
      [
        "--name", "etcd2",
        "--data-dir", "/etcd-data",
        "--listen-client-urls", "http://0.0.0.0:2379",
        "--advertise-client-urls", "http://${COMPOSE_PROJECT_NAME}-etcd2:2379",
        "--listen-peer-urls", "http://0.0.0.0:2380",
        "--initial-advertise-peer-urls", "http://${COMPOSE_PROJECT_NAME}-etcd2:2380",
        "--initial-cluster", "etcd0=http://${COMPOSE_PROJECT_NAME}-etcd0:2380,etcd1=http://${COMPOSE_PROJECT_NAME}-etcd1:2380,etcd2=http://${COMPOSE_PROJECT_NAME}-etcd2:2380",
        "--initial-cluster-token", "token",
        "--initial-cluster-state", "new"
      ]

  postgres0:
    container_name: "${COMPOSE_PROJECT_NAME}-postgres0"
    image: ghcr.io/zalando/spilo-16:3.2-p2
    networks:
      - social-network-service-nw
    environment:
      ETCD_HOST: ${COMPOSE_PROJECT_NAME}-etcd0:2379
      ETCD_HOSTS: ${COMPOSE_PROJECT_NAME}-etcd0:2379,${COMPOSE_PROJECT_NAME}-etcd1:2379,${COMPOSE_PROJECT_NAME}-etcd2:2379
      PGUSER_SUPERUSER: postgres
      PGPASSWORD_SUPERUSER: 123
      ALLOW_NOSSL: true
      PGVERSION: 16
    depends_on:
      etcd0:
        condition: service_started
      etcd1:
        condition: service_started
      etcd2:
        condition: service_started

  postgres1:
    container_name: "${COMPOSE_PROJECT_NAME}-postgres1"
    image: ghcr.io/zalando/spilo-16:3.2-p2
    networks:
      - social-network-service-nw
    environment:
      ETCD_HOST: ${COMPOSE_PROJECT_NAME}-etcd0:2379
      ETCD_HOSTS: ${COMPOSE_PROJECT_NAME}-etcd0:2379,${COMPOSE_PROJECT_NAME}-etcd1:2379,${COMPOSE_PROJECT_NAME}-etcd2:2379
      PGUSER_SUPERUSER: postgres
      PGPASSWORD_SUPERUSER: 123
      ALLOW_NOSSL: true
      PGVERSION: 16
    depends_on:
      etcd0:
        condition: service_started
      etcd1:
        condition: service_started
      etcd2:
        condition: service_started

  postgres2:
    container_name: "${COMPOSE_PROJECT_NAME}-postgres2"
    image: ghcr.io/zalando/spilo-16:3.2-p2
    networks:
      - social-network-service-nw
    environment:
      ETCD_HOST: ${COMPOSE_PROJECT_NAME}-etcd0:2379
      ETCD_HOSTS: ${COMPOSE_PROJECT_NAME}-etcd0:2379,${COMPOSE_PROJECT_NAME}-etcd1:2379,${COMPOSE_PROJECT_NAME}-etcd2:2379
      PGUSER_SUPERUSER: postgres
      PGPASSWORD_SUPERUSER: 123
      ALLOW_NOSSL: true
      PGVERSION: 16
    depends_on:
      etcd0:
        condition: service_started
      etcd1:
        condition: service_started
      etcd2:
        condition: service_started

  haproxy:
    container_name: "${COMPOSE_PROJECT_NAME}-haproxy"
    image: social-newtwok-service-haproxy:0.1.0
    build:
      context: ./
      dockerfile: haproxy.Dockerfile
    networks:
      - social-network-service-nw
    ports:
      - "7000:7000"
      - "15432:15432"
      - "25432:25432"
      - "35432:35432"
    depends_on:
      postgres0:
        condition: service_started
      postgres1:
        condition: service_started
      postgres2:
        condition: service_started

  zookeeper:
    container_name: "${COMPOSE_PROJECT_NAME}-zookeeper"
    image: confluentinc/cp-zookeeper:latest
    networks:
      - social-network-service-nw
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: ${COMPOSE_PROJECT_NAME}-zookeeper:2888:3888
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  kafka1:
    container_name: "${COMPOSE_PROJECT_NAME}-kafka1"
    image: confluentinc/cp-kafka:latest
    networks:
      - social-network-service-nw
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: LISTENER_INT://${COMPOSE_PROJECT_NAME}-kafka1:29091,LISTENER_EXT://0.0.0.0:9091
      KAFKA_ZOOKEEPER_CONNECT: ${COMPOSE_PROJECT_NAME}-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://${COMPOSE_PROJECT_NAME}-kafka1:29091,LISTENER_EXT://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
      ZOOKEEPER: ${COMPOSE_PROJECT_NAME}-zookeeper:2181

  kafka2:
    container_name: "${COMPOSE_PROJECT_NAME}-kafka2"
    image: confluentinc/cp-kafka:latest
    networks:
      - social-network-service-nw
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: LISTENER_INT://${COMPOSE_PROJECT_NAME}-kafka2:29092,LISTENER_EXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: ${COMPOSE_PROJECT_NAME}-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://${COMPOSE_PROJECT_NAME}-kafka2:29092,LISTENER_EXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
      ZOOKEEPER: ${COMPOSE_PROJECT_NAME}-zookeeper:2181

  kafka3:
    container_name: "${COMPOSE_PROJECT_NAME}-kafka3"
    image: confluentinc/cp-kafka:latest
    networks:
      - social-network-service-nw
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: LISTENER_INT://${COMPOSE_PROJECT_NAME}-kafka3:29093,LISTENER_EXT://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: ${COMPOSE_PROJECT_NAME}-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://${COMPOSE_PROJECT_NAME}-kafka3:29093,LISTENER_EXT://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
      ZOOKEEPER: ${COMPOSE_PROJECT_NAME}-zookeeper:2181

  kafka-ui:
    container_name: "${COMPOSE_PROJECT_NAME}-kafka-ui"
    image: provectuslabs/kafka-ui:latest
    networks:
      - social-network-service-nw
    ports:
      - "8082:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true

  redis:
    container_name: "${COMPOSE_PROJECT_NAME}-redis"
    image: redis
    networks:
      - social-network-service-nw
    ports:
      - "6379:6379"

  master:
    container_name: "${COMPOSE_PROJECT_NAME}-master"
    image: "citusdata/citus:12.1.3"
    networks:
      - social-network-service-nw
    ports: ["${COORDINATOR_EXTERNAL_PORT:-5432}:5432"]
    labels: ["com.citusdata.role=Master"]
    environment: &AUTH
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${POSTGRES_USER:-postgres}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
      POSTGRES_INITDB_ARGS: "-c wal_level=logical"

  worker:
    image: "citusdata/citus:12.1.3"
    networks:
      - social-network-service-nw
    labels: ["com.citusdata.role=Worker"]
    deploy:
      replicas: 1
    depends_on: [manager]
    environment:
      <<: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck

  manager:
    container_name: "${COMPOSE_PROJECT_NAME}-manager"
    image: "citusdata/membership-manager:0.3.0"
    networks:
      - social-network-service-nw
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
    depends_on: [master]
    environment:
      <<: *AUTH
      CITUS_HOST: ${COMPOSE_PROJECT_NAME}-master
