{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/dialog/unread/count": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dialog"
                ],
                "summary": "Returns total number of unread messages.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dialog.NewGetUnreadCountTotalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/dialog/{id}/list": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dialog"
                ],
                "summary": "Returns messages.",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dialog.GetMessagesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/dialog/{id}/send": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dialog"
                ],
                "summary": "Sends a message.",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": " ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dialog.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/dialog/{id}/unread/count": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dialog"
                ],
                "summary": "Returns number of unread messages in a specified chat.",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dialog.NewGetUnreadCountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/dialog/{id}/unread/read": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dialog"
                ],
                "summary": "Returns number of unread messages in a specified chat.",
                "parameters": [
                    {
                        "description": " ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dialog.MarkMessagesAsReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/friend/delete/{id}": {
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Removes specified friend.",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/friend/set/{id}": {
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Adds a friend.",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Sign in using user ID.",
                "parameters": [
                    {
                        "description": " ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/post/create": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Creates a post.",
                "parameters": [
                    {
                        "description": " ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.CreatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post.CreatePostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/post/delete/{id}": {
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Deletes specified post.",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/post/feed": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Returns posts.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": " ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": " ",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post.ReadFeedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/post/get/{id}": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Returns specified post.",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post.GetPostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/post/update": {
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Updates specified post.",
                "parameters": [
                    {
                        "description": " ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.UpdatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/user/get/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Returns user by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Registers a new user.",
                "parameters": [
                    {
                        "description": " ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/user/search": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Returns found users.",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "second_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.SearchUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "user_id"
            ],
            "properties": {
                "password": {
                    "description": "Password to the account.",
                    "type": "string",
                    "example": "123456"
                },
                "user_id": {
                    "description": "ID of the post in UUIDv4 format.",
                    "type": "string",
                    "example": "bbeb7da8-6d75-4419-9d94-91ec52bc506c"
                }
            }
        },
        "account.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "Authorization token to the account (JWT).",
                    "type": "string"
                }
            }
        },
        "account.RegisterRequest": {
            "type": "object",
            "required": [
                "biography",
                "birthdate",
                "city",
                "first_name",
                "gender",
                "password",
                "second_name"
            ],
            "properties": {
                "biography": {
                    "description": "Biography of the user.",
                    "type": "string",
                    "example": "Software developer"
                },
                "birthdate": {
                    "description": "Birthday in the format \"1990-12-31\".",
                    "type": "string",
                    "example": "1990-01-01"
                },
                "city": {
                    "description": "City of the user.",
                    "type": "string",
                    "example": "New York"
                },
                "first_name": {
                    "description": "First name of the user.",
                    "type": "string",
                    "example": "John"
                },
                "gender": {
                    "description": "Gender of the user (\"Male\" or \"Female\").",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Gender"
                        }
                    ],
                    "example": "Male"
                },
                "password": {
                    "description": "Password to the account.",
                    "type": "string",
                    "example": "123456"
                },
                "second_name": {
                    "description": "Second name of the user.",
                    "type": "string",
                    "example": "Doe"
                }
            }
        },
        "account.RegisterResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "description": "ID of the user in UUIDv4 format.",
                    "type": "string",
                    "example": "bbeb7da8-6d75-4419-9d94-91ec52bc506c"
                }
            }
        },
        "common.Gender": {
            "type": "string",
            "enum": [
                "Male",
                "Female"
            ],
            "x-enum-varnames": [
                "GenderMale",
                "GenderFemale"
            ]
        },
        "dialog.GetMessagesResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "List of messages.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dialog.GetMessagesResponseItem"
                    }
                }
            }
        },
        "dialog.GetMessagesResponseItem": {
            "type": "object",
            "properties": {
                "from": {
                    "description": "ID of the message sender in UUIDv4 format.",
                    "type": "string"
                },
                "messageId": {
                    "description": "ID of the message.",
                    "type": "integer"
                },
                "text": {
                    "description": "Content of the message.",
                    "type": "string"
                },
                "to": {
                    "description": "ID of the message recipient in UUIDv4 format.",
                    "type": "string"
                }
            }
        },
        "dialog.MarkMessagesAsReadRequest": {
            "type": "object",
            "properties": {
                "messageIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dialog.NewGetUnreadCountResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "dialog.NewGetUnreadCountTotalResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "dialog.SendMessageRequest": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "text": {
                    "description": "Content of the message.",
                    "type": "string"
                }
            }
        },
        "post.CreatePostRequest": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "text": {
                    "description": "Content of the post.",
                    "type": "string"
                }
            }
        },
        "post.CreatePostResponse": {
            "type": "object",
            "properties": {
                "postId": {
                    "description": "ID of the post in UUIDv4 format.",
                    "type": "string"
                }
            }
        },
        "post.GetPostResponse": {
            "type": "object",
            "properties": {
                "authorUserId": {
                    "description": "User ID of the post author in UUIDv4 format.",
                    "type": "string"
                },
                "postId": {
                    "description": "ID of the post in UUIDv4 format.",
                    "type": "string"
                },
                "text": {
                    "description": "Content of the post.",
                    "type": "string"
                }
            }
        },
        "post.ReadFeedResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "description": "List of posts.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/post.ReadFeedResponseItem"
                    }
                }
            }
        },
        "post.ReadFeedResponseItem": {
            "type": "object",
            "properties": {
                "authorUserId": {
                    "description": "User ID of the post author in UUIDv4 format.",
                    "type": "string"
                },
                "postId": {
                    "description": "ID of the post in UUIDv4 format.",
                    "type": "string"
                },
                "text": {
                    "description": "Content of the post.",
                    "type": "string"
                }
            }
        },
        "post.UpdatePostRequest": {
            "type": "object",
            "required": [
                "postId",
                "text"
            ],
            "properties": {
                "postId": {
                    "description": "ID of the post in UUIDv4 format.",
                    "type": "string"
                },
                "text": {
                    "description": "Content of the message.",
                    "type": "string"
                }
            }
        },
        "user.GetUserResponse": {
            "type": "object",
            "properties": {
                "biography": {
                    "description": "Biography of the user.",
                    "type": "string",
                    "example": "Software developer"
                },
                "birthdate": {
                    "description": "Birthday in the format \"1990-12-31\".",
                    "type": "string",
                    "example": "1990-01-01"
                },
                "city": {
                    "description": "City of the user.",
                    "type": "string",
                    "example": "New York"
                },
                "first_name": {
                    "description": "First name of the user.",
                    "type": "string",
                    "example": "John"
                },
                "gender": {
                    "description": "Gender of the user (\"Male\" or \"Female\").",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Gender"
                        }
                    ],
                    "example": "Male"
                },
                "second_name": {
                    "description": "Second name of the user.",
                    "type": "string",
                    "example": "Doe"
                },
                "user_id": {
                    "description": "ID of the user in UUIDv4 format.",
                    "type": "string",
                    "example": "bbeb7da8-6d75-4419-9d94-91ec52bc506c"
                }
            }
        },
        "user.SearchUsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "description": "List of found users.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.SearchUsersResponseItem"
                    }
                }
            }
        },
        "user.SearchUsersResponseItem": {
            "type": "object",
            "properties": {
                "biography": {
                    "description": "Biography of the user.",
                    "type": "string",
                    "example": "Software developer"
                },
                "birthdate": {
                    "description": "Birthday in the format \"1990-12-31\".",
                    "type": "string",
                    "example": "1990-01-01"
                },
                "city": {
                    "description": "City of the user.",
                    "type": "string",
                    "example": "New York"
                },
                "first_name": {
                    "description": "First name of the user.",
                    "type": "string",
                    "example": "John"
                },
                "gender": {
                    "description": "Gender of the user (\"Male\" or \"Female\").",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Gender"
                        }
                    ],
                    "example": "Male"
                },
                "second_name": {
                    "description": "Second name of the user.",
                    "type": "string",
                    "example": "Doe"
                },
                "user_id": {
                    "description": "ID of the user in UUIDv4 format.",
                    "type": "string",
                    "example": "bbeb7da8-6d75-4419-9d94-91ec52bc506c"
                }
            }
        }
    },
    "securityDefinitions": {
        "bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}